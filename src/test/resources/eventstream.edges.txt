Buffer-[DATAFLOW]->from(Buffer, hex)
aes256-[DATAFLOW]->createDecipher(require(crypto), aes256, npm_package_description)
e-[DATAFLOW]->e()
a-[DATAFLOW]->e()(f, a, )
hex-[DATAFLOW]->update(createDecipher(require(crypto), aes256, npm_package_description), hex, utf8)
[get]constructor()-[DATAFLOW]->_compile([get]constructor(), decoded, )
from-[DATAFLOW]->from(Buffer, hex)
decoded-[DATAFLOW]->add
require-[DATAFLOW]->require(decode(2e2f746573742f64617461))
-[DATAFLOW]->e()(f, a, )
-[DATAFLOW]->_compile([get]constructor(), decoded, )
decode-[DATAFLOW]->decode(2e2f746573742f64617461)
hex-[DATAFLOW]->from(Buffer, hex)
require(crypto)-[DATAFLOW]->createDecipher(require(crypto), aes256, npm_package_description)
decode-[DATAFLOW]->decode()
createDecipher-[DATAFLOW]->createDecipher(require(crypto), aes256, npm_package_description)
toString-[DATAFLOW]->toString(from(Buffer, hex))
utf8-[DATAFLOW]->update(createDecipher(require(crypto), aes256, npm_package_description), hex, utf8)
final(createDecipher(require(crypto), aes256, npm_package_description), utf8)-[DATAFLOW]->add
createDecipher(require(crypto), aes256, npm_package_description)-[DATAFLOW]->update(createDecipher(require(crypto), aes256, npm_package_description), hex, utf8)
exports-[DATAFLOW]->exports(f)
f-[DATAFLOW]->exports(f)
f-[DATAFLOW]->e()(f, a, )
2e2f746573742f64617461-[DATAFLOW]->decode(2e2f746573742f64617461)
npm_package_description-[DATAFLOW]->createDecipher(require(crypto), aes256, npm_package_description)
Leventstream.js-[CALL]->decode
[get]constructor-[DATAFLOW]->[get]constructor()
[get]constructor()-[DATAFLOW]->exports([get]constructor())
exports-[DATAFLOW]->exports([get]constructor())
[get]paths-[DATAFLOW]->[get]constructor()
from(Buffer, hex)-[DATAFLOW]->toString(from(Buffer, hex))
_compile-[DATAFLOW]->_compile([get]constructor(), decoded, )
update-[DATAFLOW]->update(createDecipher(require(crypto), aes256, npm_package_description), hex, utf8)
[get]paths-[DATAFLOW]->f
createDecipher(require(crypto), aes256, npm_package_description)-[DATAFLOW]->final(createDecipher(require(crypto), aes256, npm_package_description), utf8)
final-[DATAFLOW]->final(createDecipher(require(crypto), aes256, npm_package_description), utf8)
decode(2e2f746573742f64617461)-[DATAFLOW]->require(decode(2e2f746573742f64617461))
require-[DATAFLOW]->require(crypto)
crypto-[DATAFLOW]->require(crypto)
e()-[DATAFLOW]->e()(f, a, )
utf8-[DATAFLOW]->final(createDecipher(require(crypto), aes256, npm_package_description), utf8)
decoded-[DATAFLOW]->_compile([get]constructor(), decoded, )
